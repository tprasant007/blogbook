@inject IAuthService AuthService
@inject NavigationManager Navigation

<nav class="navbar navbar-expand-md navbar-light bg-light py-3">
    <div class="container-xxl">
        <a class="navbar-brand" href="/">
            <span class="fw-bold text-secondary">Blogbook</span>
        </a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#main-nav" aria-controls="main-nav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse justify-content-end" id="main-nav">
            @if (user == null)
            {
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/login">Login</a>
                    </li>
                </ul>
            }
            else
            {
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <span class="text-info nav-link">Welcome @user.Username</span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/createblog">Create Blog</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/myblogs">My Blogs</a>
                    </li>
                    <li class="nav-item">
                        <button class="btn btn-secondary" @onclick="HandleLogout">Logout</button>
                    </li>
                </ul>
            }
        </div>
    </div>
</nav>


@code
{
    private User? user;
    protected override void OnInitialized()
    {
        user = AuthService.User;
        AuthService.OnUserChanged += OnUserChanged;
    }
    private void OnUserChanged()
    {
        user = AuthService.User;
        InvokeAsync(StateHasChanged);
    }
    private async Task HandleLogout()
    {
        await AuthService.Logout();
        user = null;
        Navigation.NavigateTo("/");
    }
    public void Dispose()
    {
        AuthService.OnUserChanged -= OnUserChanged;
    }
}