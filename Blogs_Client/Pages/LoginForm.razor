@page "/login"
@using System.ComponentModel.DataAnnotations
@inject IAuthService AuthService
@inject NavigationManager Navigation


<div class="row justify-content-center mt-5">
    <div class="col-md-4 bg-light p-4 rounded">
        <h3 class="row justify-content-center">Login</h3>
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label for="username", class="form-label">Username:</label>
                <InputText id="username" @bind-Value="loginModel.Username" class="form-control"/>
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <InputText id="password" @bind-Value="loginModel.Password" type="password" class="form-control"/>
            </div>
            <button type="submit" class="btn btn-primary">Login</button>
            <p class="pt-2">Don't have an account? <a href="/register">Signup</a> instead.</p>
            @if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger mt-3 mb-0">@error</div>
            }
        </EditForm>
    </div>
</div>
@code {
    private LoginModel loginModel = new();
    private string? error;
    protected override void OnInitialized()
    {
        AuthService.OnUserChanged += OnUserChanged;
        // redirect to home if already logged in
        if (AuthService.User != null)
        {
            Navigation.NavigateTo("/");
        }
    }
    private void OnUserChanged()
    {
        StateHasChanged();
    }

    private async Task HandleLogin()
    {
        try
        {
            await AuthService.Login(loginModel.Username, loginModel.Password);
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }


    public void Dispose()
    {
        //avoid memory leaks
        AuthService.OnUserChanged -= OnUserChanged;
    }

    public class LoginModel
    {
        [Required]
        public string Username { get; set; } = string.Empty;
        [Required]
        public string Password { get; set; } = string.Empty;
    }
}
